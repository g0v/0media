// Generated by LiveScript 1.2.0
var x$;
x$ = angular.module('yslin', []);
x$.directive('lzload', function(){
  return {
    restrict: 'A',
    link: function(scope, e, attrs, ctrl){
      var des;
      des = $(e[0].parentNode.parentNode.parentNode);
      des.addClass('lz-hide');
      if (e.prop('tagName') === 'IMG') {
        return e.load(function(){
          des.addClass('lz-show');
          return scope.isotope.appended(des[0]);
        });
      } else {
        return scope.isotope.appended(e[0].parentNode.parentNode.parentNode);
      }
    }
  };
});
x$.factory('scrollr', function(){
  return {
    list: [],
    range: [],
    rlen: 0,
    register: function(s, e, cb){
      return this.list.push([s, e, cb]);
    },
    refresh: function(){
      var i$, ref$, len$, i, d, ref1$, s, o;
      for (i$ = 0, len$ = (ref$ = this.list).length; i$ < len$; ++i$) {
        i = i$;
        d = ref$[i$];
        ref1$ = [d[0](), d[1]()], s = ref1$[0], o = ref1$[1];
        this.range[i] = [s, s + o, o];
      }
      this.range.sort(function(a, b){
        return b[0] - a[0];
      });
      return this.rlen = this.range.length;
    },
    tick: function(c){
      var w, i$, ref$, len$, i, item, ratio, ref1$, ref2$, results$ = [];
      w = $(window).height();
      for (i$ = 0, len$ = (ref$ = this.range).length; i$ < len$; ++i$) {
        i = i$;
        item = ref$[i$];
        ratio = (ref1$ = (ref2$ = (c + w - item[0]) / item[2]) > 0 ? ref2$ : 0) < 1 ? ref1$ : 1;
        results$.push(this.list[i][2](ratio));
      }
      return results$;
    }
  };
});
x$.controller('main', function($scope, $interval, $timeout, scrollr){
  return $timeout(function(){
    return scrollr.refresh();
  }, 1000);
});